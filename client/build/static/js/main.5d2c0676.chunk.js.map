{"version":3,"sources":["users/index.js","schema/message.js","messages/index.js","login/index.js","schema/user.js","App.js","index.js"],"names":["User","props","users","email","name","selectedMail","deleteUser","selectUserFunction","useCallback","mail","user","deleteUserFunction","a","window","location","href","className","style","margin","Button","size","variant","onClick","map","item","index","MessageQuery","gql","CreateMessageMutation","UserTypingMutation","MessageSubscription","UserTypingSubscription","compose","graphql","chatBox","useRef","useState","message","setMessage","userTyping","setUser","timer","setTimer","useEffect","subscribeToMore","document","variables","receiverMail","updateQuery","prev","subscriptionData","data","msg","newMessage","messages","find","x","id","current","scrollToBottom","scrollIntoView","handleChange","e","target","value","changeMail","clearTimeout","setTimeout","handleSubmit","preventDefault","length","createMessage","senderMail","timestamp","Date","now","update","store","readQuery","query","push","writeQuery","error","loading","receiverName","userLeft","setStyle","moment","fromNow","onSubmit","ref","TextField","placeholder","fullWidth","onChange","Copyright","Typography","color","align","Link","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","marginLeft","marginRight","avatar","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","token","setToken","setError","setLoading","validate","existingUser","some","validator","isEmail","createUser","localStorage","JSON","stringify","Container","component","maxWidth","marginBottom","Paper","CssBaseline","Avatar","LockOutlined","noValidate","required","label","autoFocus","helperText","type","disabled","Box","mt","UserQuery","CreateUserMutation","DeleteUserMutation","AddUserSubscription","DeleteUserSubscription","getItem","parse","receiverState","setReceiverState","setUserLeft","hidden","setHidden","newUser","oldUser","newUsers","filter","removeItem","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","lazy","inactivityTimeout","link","split","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5d2c0676.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst User = props => {\r\n\tconst { users, email, name, selectedMail, deleteUser } = props;\r\n\r\n\tconst selectUserFunction = useCallback((mail, user) => {\r\n\t\tselectedMail(mail, user);\r\n\t}, [selectedMail]);\r\n\r\n\tconst deleteUserFunction = useCallback(async() => {\r\n\t\tawait deleteUser(email);\r\n\t\twindow.location.href = window.location.href;\r\n\t}, [deleteUser, email]);\r\n\r\n\treturn (\r\n\t\t<div className=\"user-welcome\" style={props.style}>\r\n\t\t<div className=\"user-heading\">\r\n\t\t\t<p style={{margin: 'unset'}}>Hello, {name}</p>\r\n\t\t\t<Button\r\n\t\t\tclassName=\"leave\"\r\n\t\t\tsize=\"small\"\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tonClick={deleteUserFunction}\r\n\t\t\t>\r\n\t\t\t\tLeave Chat?\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t\t<div className=\"select-user\">\r\n\t\t{users.map((item, index) =>\r\n\t\t\titem.email !== email ? (\r\n\t\t\t\t<div\r\n\t\t\t\tkey={index}\r\n\t\t\t\tclassName=\"users\"\r\n\t\t\t\tonClick={() => selectUserFunction(item.email, item.name)}\r\n\t\t\t\t>\r\n\t\t\t\t{item.name}\r\n\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\"\"\r\n\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default User;\r\n","import gql from 'graphql-tag';\r\n\r\nconst MessageQuery = gql`\r\nquery {\r\n\tmessages {\r\n\t\tid\r\n\t\tmessage\r\n\t\tsenderMail\r\n\t\treceiverMail\r\n\t\ttimestamp\r\n\t\tusers {\r\n\t\t\tname\r\n\t\t\temail\r\n\t\t}\r\n\t}\r\n}\r\n`;\r\n\r\nconst CreateMessageMutation = gql`\r\nmutation(\r\n$message: String!\r\n$senderMail: String!\r\n$receiverMail: String!\r\n$timestamp: Float!\r\n) {\r\n\tcreateMessage(\r\n\tmessage: $message\r\n\tsenderMail: $senderMail\r\n\treceiverMail: $receiverMail\r\n\ttimestamp: $timestamp\r\n\t) {\r\n\t\tmessage\r\n\t\tsenderMail\r\n\t\treceiverMail\r\n\t\tid\r\n\t\ttimestamp\r\n\t\tusers {\r\n\t\t\tname\r\n\t\t\temail\r\n\t\t}\r\n\t}\r\n}\r\n`;\r\n\r\nconst UserTypingMutation = gql`\r\nmutation($email: String!, $receiverMail: String!) {\r\n\tuserTyping(email: $email, receiverMail: $receiverMail)\r\n}\r\n`;\r\n\r\nconst MessageSubscription = gql`\r\nsubscription($receiverMail: String!) {\r\n\tnewMessage(receiverMail: $receiverMail) {\r\n\t\tmessage\r\n\t\tsenderMail\r\n\t\treceiverMail\r\n\t\tid\r\n\t\ttimestamp\r\n\t\tusers {\r\n\t\t\tname\r\n\t\t\temail\r\n\t\t}\r\n\t}\r\n}\r\n`;\r\n\r\nconst UserTypingSubscription = gql`\r\nsubscription($receiverMail: String!) {\r\n\tuserTyping(receiverMail: $receiverMail)\r\n}\r\n`;\r\n\r\nexport {\r\n\tMessageQuery,\r\n\tCreateMessageMutation,\r\n\tUserTypingMutation,\r\n\tMessageSubscription,\r\n\tUserTypingSubscription\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport {flowRight as compose} from 'lodash';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport moment from 'moment';\r\nimport {\r\n\tMessageQuery,\r\n\tCreateMessageMutation,\r\n\tUserTypingMutation,\r\n\tMessageSubscription,\r\n\tUserTypingSubscription\r\n} from '../schema/message'; \r\n\r\nconst Message = props => {\r\n\tconst chatBox = useRef(null);\r\n\r\n\tconst [message, setMessage] = useState('');\r\n\r\n\tconst [userTyping, setUser] = useState('');\r\n\r\n\tconst [timer, setTimer] = useState(null);\r\n\r\n\tconst handleShow = () => {\r\n\t\tprops.setStyle();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.message.subscribeToMore({\r\n\t\t\tdocument: MessageSubscription,\r\n\t\t\tvariables: {\r\n\t\t\t\treceiverMail: props.email\r\n\t\t\t},\r\n\t\t\tupdateQuery: (prev, { subscriptionData }) => {\r\n\t\t\t\tif (!subscriptionData.data) return prev;\r\n\t\t\t\tconst msg = subscriptionData.data.newMessage;\r\n\t\t\t\tif (prev.messages.find(x => x.id === msg.id)) {\r\n\t\t\t\t\treturn prev;\r\n\t\t\t\t}\r\n\t\t\t\treturn { ...prev, messages: [...prev.messages, msg] };\r\n\t\t\t}\r\n\t\t});\r\n\t\tprops.message.subscribeToMore({\r\n\t\t\tdocument: UserTypingSubscription,\r\n\t\t\tvariables: {\r\n\t\t\t\treceiverMail: props.email\r\n\t\t\t},\r\n\t\t\tupdateQuery: (prev, { subscriptionData }) => {\r\n\t\t\t\tif (!subscriptionData.data) return prev;\r\n\t\t\t\tconst user = subscriptionData.data.userTyping;\r\n\t\t\t\tsetUser(user);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (chatBox.current) {\r\n\t\t\tscrollToBottom();\r\n\t\t}\r\n\t});\r\n\r\n\tconst scrollToBottom = () => {\r\n\t\tchatBox.current.scrollIntoView();\r\n\t};\r\n\r\n\tconst handleChange = async e => {\r\n\t\tsetMessage(e.target.value);\r\n\t\tconst { email, receiverMail } = props;\r\n\t\tawait props.userTyping({\r\n\t\t\tvariables: {\r\n\t\t\t\temail,\r\n\t\t\t\treceiverMail\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst changeMail = async () => {\r\n\t\t\tawait props.userTyping({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\temail: 'email',\r\n\t\t\t\t\treceiverMail\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t\tclearTimeout(timer);\r\n\t\tsetTimer(setTimeout(changeMail, 2000));\r\n\t};\r\n\r\n\tconst handleSubmit = async (e, message, email) => {\r\n\t\tsetMessage('');\r\n\t\te.preventDefault();\r\n\t\tconst { receiverMail } = props;\r\n\t\tif (!message.length) return null;\r\n\t\tawait props.createMessage({\r\n\t\t\tvariables: {\r\n\t\t\t\treceiverMail: receiverMail,\r\n\t\t\t\tsenderMail: email,\r\n\t\t\t\tmessage: message,\r\n\t\t\t\ttimestamp: Date.now()\r\n\t\t\t},\r\n\t\t\tupdate: (store, { data: { createMessage } }) => {\r\n\t\t\t\tconst data = store.readQuery({ query: MessageQuery });\r\n\t\t\t\tdata.messages.push(createMessage);\r\n\t\t\t\tstore.writeQuery({ query: MessageQuery, data });\r\n\t\t\t}\r\n\t\t});\r\n\t\tawait props.userTyping({\r\n\t\t\tvariables: {\r\n\t\t\t\temail: 'email',\r\n\t\t\t\treceiverMail\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst {\r\n\t\tmessage: { error, loading, messages },\r\n\t\temail,\r\n\t\treceiverMail,\r\n\t\treceiverName,\r\n\t\tuserLeft\r\n\t} = props;\r\n\r\n\tif (error || loading) return null;\r\n\r\n\treturn (\r\n\t\t<div className=\"personal-chat\" style={props.style}>\r\n\t\t<div className=\"chats-header\">\r\n\t\t<div className=\"back-button\" onClick={handleShow}>\r\n\t\t<div className=\"bar1\" />\r\n\t\t<div className=\"bar2\" />\r\n\t\t<div className=\"bar3\" />\r\n\t\t</div>\r\n\t\t<div className=\"user-typing\">\r\n\t\t{userTyping && userTyping === receiverMail\r\n\t\t\t? `${receiverName} is typing`\r\n\t\t\t: receiverName}\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"all-messages\">\r\n\t\t\t{\r\n\t\t\t\tmessages.map(item =>\r\n\t\t\t\t((item.senderMail === email && item.receiverMail === receiverMail) ||\r\n\t\t\t\t(item.senderMail === receiverMail && item.receiverMail === email)) ?(\r\n\t\t\t\t\t<div\r\n\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\titem.users.map(a => a.email === receiverMail ? 'receiver' : 'sender')\r\n\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"sender-name\">{item.users.map(x => x.name)}</div>\r\n\t\t\t\t\t\t{item.message}{' '}\r\n\t\t\t\t\t\t<span className=\"time\"> {moment(item.timestamp).fromNow()}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t : \r\n\t\t\t\t\t('')\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\tuserLeft && userLeft === receiverMail ? \r\n\t\t\t\t<div>{receiverName} has left the chat. </div>\r\n\t\t\t\t : \r\n\t\t\t\t null\r\n\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\treceiverMail && receiverName && !userLeft ?\r\n\t\t\t\t<form\r\n\t\t\t\tonSubmit={e => handleSubmit(e, message, email)}\r\n\t\t\t\tref={chatBox}\r\n\t\t\t\tclassName=\"chat-box\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\tstyle={{ margin: 10 }}\r\n\t\t\t\t\tplaceholder={'Say something to ' + receiverName}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\tvalue={message}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t\t:\r\n\t\t\t\t<div className=\"select-message\">\r\n\t\t\t\t\tSelect a logged in user from the left panel\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t\t);\r\n};\r\n\r\nexport default compose(\r\n\tgraphql(MessageQuery, { name: 'message' }),\r\n\tgraphql(CreateMessageMutation, { name: 'createMessage' }),\r\n\tgraphql(UserTypingMutation, { name: 'userTyping' })\r\n\t)(Message);\r\n","import React, {useState} from 'react';\r\nimport {LockOutlined} from '@material-ui/icons';\r\nimport {Container, Typography, Box, Link, TextField, CssBaseline, Button, Avatar, Paper} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport validator from \"validator\";\r\n\r\nfunction Copyright() {\r\n\treturn (\r\n\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n\t\t\t{'Copyright © '}\r\n\t\t\t<Link color=\"inherit\" href=\"manojspace.com\">\r\n\t\t\t\tmanoj\r\n\t\t\t</Link>{' '}\r\n\t\t\t{new Date().getFullYear()}\r\n\t\t\t{'.'}\r\n\t\t</Typography>\r\n\t\t);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tmarginLeft: '15px',\r\n\t\tmarginRight: '15px'\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(1),\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t},\r\n\terror: {\r\n\t\tcolor: 'red'\r\n\t}\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n\tconst classes = useStyles();\r\n\tconst [token, setToken] = useState({ name: \"\", email: \"\" });\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst handleChange = e => {\r\n\t\tsetToken({ ...token, [e.target.name]: e.target.value });\r\n\t};\r\n\r\n\tconst validate = async () => {\r\n\t\tconst { name, email } = token;\r\n\r\n\t\tconst existingUser = props.users.some(function(user) {\r\n\t\t\treturn user.email === email;\r\n\t\t});\r\n\r\n\t\tif (!name.length) {\r\n\t\t\tsetError(\"Name is required\");\r\n\t\t}\r\n\r\n\t\tif (!validator.isEmail(email)) {\r\n\t\t\tsetError(\"Valid email is required\");\r\n\t\t}\r\n\r\n\t\tif (existingUser) {\r\n\t\t\tsetError(\"Email already in use\");\r\n\t\t}\r\n\r\n\t\tif (name.length && validator.isEmail(email) && !existingUser) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(\"\");\r\n\t\t\tawait props.createUser(email, name);\r\n\t\t\tsetLoading(false);\r\n\t\t\tlocalStorage[\"token\"] = JSON.stringify(token);\r\n\t\t\twindow.location.href = window.location.href;\r\n\t\t}\r\n\t};\r\n\r\n\tconst { name, email } = token;\r\n\r\n\treturn (\r\n\t\t<Container component=\"main\" maxWidth=\"xs\" style={{marginBottom: '20px'}}>\r\n\t\t\t<Paper>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t<Avatar className={classes.avatar}>\r\n\t\t\t\t\t<LockOutlined />\r\n\t\t\t\t</Avatar>\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t\tSign in\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<form className={classes.form} noValidate>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\terror={(!name && error)?true:false}\r\n\t\t\t\t\thelperText={(!name && error)?\"Please enter your name to enter into chat\":null}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\terror={(!email && error)?true:false}\r\n\t\t\t\t\thelperText={(!email && error)?\"Please enter email address to enter into chat\":null}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\tonClick={validate}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{loading?\"Please wait...\":\"Submit\"}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<div style={{color: 'red'}}>{error}</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<Box mt={8}>\r\n\t\t\t\t<Copyright />\r\n\t\t\t</Box>\r\n\t\t\t</Paper>\r\n\t\t</Container>\r\n\t\t);\r\n}","import gql from 'graphql-tag';\r\nconst UserQuery = gql`\r\nquery {\r\n\tusers {\r\n\t\tid\r\n\t\tname\r\n\t\temail\r\n\t\tmessages {\r\n\t\t\tmessage\r\n\t\t\tsenderMail\r\n\t\t\treceiverMail\r\n\t\t}\r\n\t}\r\n}\r\n`;\r\n\r\nconst CreateUserMutation = gql`\r\nmutation($name: String!, $email: String!) {\r\n\tcreateUser(name: $name, email: $email) {\r\n\t\tname\r\n\t\temail\r\n\t\tid\r\n\t\tmessages {\r\n\t\t\tmessage\r\n\t\t\tsenderMail\r\n\t\t\treceiverMail\r\n\t\t}\r\n\t}\r\n}\r\n`;\r\n\r\nconst DeleteUserMutation = gql`\r\nmutation($email: String!) {\r\n\tdeleteUser(email: $email)\r\n}\r\n`;\r\n\r\nconst AddUserSubscription = gql`\r\nsubscription {\r\n\tnewUser {\r\n\t\tname\r\n\t\temail\r\n\t\tid\r\n\t\tmessages {\r\n\t\t\tmessage\r\n\t\t\tsenderMail\r\n\t\t\treceiverMail\r\n\t\t\ttimestamp\r\n\t\t}\r\n\t}\r\n}\r\n`;\r\n\r\nconst DeleteUserSubscription = gql`\r\nsubscription {\r\n\toldUser\r\n}\r\n`;\r\n\r\nexport {\r\n\tUserQuery,\r\n\tCreateUserMutation,\r\n\tDeleteUserMutation,\r\n\tAddUserSubscription,\r\n\tDeleteUserSubscription\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport User from './users';\r\nimport Message from './messages';\r\nimport Registration from './login';\r\nimport { graphql } from 'react-apollo';\r\nimport {flowRight as compose} from 'lodash';\r\nimport {\r\n\tUserQuery,\r\n\tCreateUserMutation,\r\n\tDeleteUserMutation,\r\n\tAddUserSubscription,\r\n\tDeleteUserSubscription\r\n} from './schema/user';\r\n\r\nconst App = props => {\r\n\tconst user =\r\n\t(localStorage.getItem('token') &&\r\n\t\tJSON.parse(localStorage.getItem('token'))) ||\r\n\t{};\r\n\r\n\tconst [receiverState, setReceiverState] = useState({\r\n\t\treceiverMail: '',\r\n\t\treceiverName: ''\r\n\t});\r\n\r\n\tconst [userLeft, setUserLeft] = useState('');\r\n\r\n\tconst [hidden, setHidden] = useState(false);\r\n\r\n\tconst setSelectedMail = (mail, user) => {\r\n\t\tsetReceiverState(receiverState => {\r\n\t\t\treturn { ...receiverState, receiverMail: mail, receiverName: user };\r\n\t\t});\r\n\t\tsetHidden(!hidden);\r\n\t};\r\n\r\n\tconst setStyle = () => {\r\n\t\tsetHidden(!hidden);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst subscribeToMore = props.data.subscribeToMore;\r\n\t\tsubscribeToMore({\r\n\t\t\tdocument: AddUserSubscription,\r\n\t\t\tupdateQuery: (prev, { subscriptionData }) => {\r\n\t\t\t\tif (!subscriptionData.data) return prev;\r\n\t\t\t\tconst user = subscriptionData.data.newUser;\r\n\t\t\t\tif (!prev.users.find(x => x.id === user.id)) {\r\n\t\t\t\t\treturn { ...prev, users: [...prev.users, user] };\r\n\t\t\t\t}\r\n\t\t\t\treturn prev;\r\n\t\t\t}\r\n\t\t});\r\n\t\tsubscribeToMore({\r\n\t\t\tdocument: DeleteUserSubscription,\r\n\t\t\tupdateQuery: (prev, { subscriptionData }) => {\r\n\t\t\t\tif (!subscriptionData.data) return prev;\r\n\t\t\t\tconst oldUser = subscriptionData.data.oldUser;\r\n\t\t\t\tif (prev.users.some(x => x.email === oldUser)) {\r\n\t\t\t\t\tconst newUsers = prev.users.filter(x => x.email !== oldUser);\r\n\t\t\t\t\tprev.users = newUsers;\r\n\t\t\t\t\treturn prev;\r\n\t\t\t\t}\r\n\t\t\t\tsetUserLeft(oldUser);\r\n\t\t\t\treturn prev;\r\n\t\t\t}\r\n\t\t});\r\n\t}, [props.data]);\r\n\r\n\tconst createUser = async (email, name) => {\r\n\t\treturn await props.createUser({\r\n\t\t\tvariables: {\r\n\t\t\t\temail,\r\n\t\t\t\tname\r\n\t\t\t},\r\n\t\t\tupdate: (store, { data: { createUser } }) => {\r\n\t\t\t\tconst data = store.readQuery({ query: UserQuery });\r\n\t\t\t\tif (!data.users.find(x => x.id === createUser.id)) {\r\n\t\t\t\t\tdata.users.push(createUser);\r\n\t\t\t\t}\r\n\t\t\t\tstore.writeQuery({ query: UserQuery, data });\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst deleteUser = async email => {\r\n\t\tlocalStorage.removeItem('token');\r\n\t\treturn await props.deleteUser({\r\n\t\t\tvariables: { email },\r\n\t\t\tupdate: store => {\r\n\t\t\t\tconst data = store.readQuery({ query: UserQuery });\r\n\t\t\t\tdata.users = data.users.filter(x => x.email !== email);\r\n\t\t\t\tstore.writeQuery({ query: UserQuery, data });\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst { receiverMail, receiverName } = receiverState;\r\n\tconst {\r\n\t\tdata: { users, error, loading }\r\n\t} = props;\r\n\r\n\tif (loading || error) return null;\r\n\tif (localStorage.getItem('token')) {\r\n\t\treturn (\r\n\t\t\t<div className=\"chat-page\">\r\n\t\t\t\t<User\r\n\t\t\t\tstyle={{ display: hidden ? 'none' : 'block' }}\r\n\t\t\t\tusers={users}\r\n\t\t\t\temail={user.email}\r\n\t\t\t\tname={user.name}\r\n\t\t\t\tselectedMail={setSelectedMail}\r\n\t\t\t\tdeleteUser={deleteUser}\r\n\t\t\t\t/>\r\n\t\t\t\t<Message\r\n\t\t\t\tstyle={{ display: hidden ? 'block' : 'none' }}\r\n\t\t\t\temail={user.email}\r\n\t\t\t\treceiverMail={receiverMail}\r\n\t\t\t\treceiverName={receiverName}\r\n\t\t\t\tuserLeft={userLeft}\r\n\t\t\t\tname={user.name}\r\n\t\t\t\tsetStyle={setStyle}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n\treturn <Registration users={users} createUser={createUser} />;\r\n};\r\n\r\nexport default compose(\r\n\tgraphql(UserQuery),\r\n\tgraphql(CreateUserMutation, { name: 'createUser' }),\r\n\tgraphql(DeleteUserMutation, { name: 'deleteUser' })\r\n)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ApolloClient from \"apollo-client\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { split } from 'apollo-link';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { WebSocketLink } from 'apollo-link-ws';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport App from \"./App\";\r\n\r\nimport \"./assets/style.css\";\r\n\r\nconst httpLink = new HttpLink({\r\n\turi: 'http://manojspace.com:4000/'\r\n});\r\n\r\nconst wsLink = new WebSocketLink({\r\n\turi: `ws://manojspace.com:4000/`,\r\n\toptions: {\r\n\t\treconnect: true,\r\n\t\tlazy: true,\r\n\t\tinactivityTimeout: 30000,\r\n\t}\r\n});\r\n\r\nconst link = split(\r\n\t({ query }) => {\r\n\t\tconst { kind, operation } = getMainDefinition(query);\r\n\t\treturn kind === 'OperationDefinition' && operation === 'subscription';\r\n\t},\r\n\twsLink,\r\n\thttpLink,\r\n\t);\r\n\r\nconst client = new ApolloClient({\r\n\tlink,\r\n\tcache: new InMemoryCache()\r\n})\r\n\r\nReactDOM.render(\r\n\t<ApolloProvider client={client}>\r\n\t\t<App />\r\n\t</ApolloProvider>,\r\n\tdocument.getElementById(\"root\")\r\n\t);\r\n\r\n"],"sourceRoot":""}